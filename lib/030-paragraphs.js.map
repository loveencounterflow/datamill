{
  "version": 3,
  "file": "030-paragraphs.js",
  "sourceRoot": "..",
  "sources": [
    "src/030-paragraphs.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n\n\n'use strict'\n\n############################################################################################################\nH                         = require './helpers'\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = H.badge_from_filename __filename\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n{ jr\n  assign }                = CND\n#...........................................................................................................\nrequire                   './exception-handler'\nfirst                     = Symbol 'first'\nlast                      = Symbol 'last'\nVNR                       = require './vnr'\n#...........................................................................................................\nPD                        = require 'pipedreams'\n{ $\n  $watch\n  $async\n  select\n  stamp }                 = PD\n#...........................................................................................................\ntypes                     = require './types'\n{ isa\n  validate\n  declare\n  size_of\n  type_of }               = types\n#...........................................................................................................\n# ### Whether in-place updates are OK ###\n# prefer_updates = true\n\n\n#-----------------------------------------------------------------------------------------------------------\n@$paragraphs = ( S ) ->\n  ### TAINT avoid to send `^p` after block-level element ###\n  key_registry = H.get_key_registry S\n  # debug 'µ11121', key_registry\n  #.........................................................................................................\n  return $ { first, }, ( d, send ) =>\n    return if d is first\n    # debug 'µ11121', jr d\n    #.......................................................................................................\n    if ( select d, '^blank' )\n      urge 'µ11121', CND.pink \"blank\"\n    #.......................................................................................................\n    else if ( select d, '^line' )\n      urge 'µ11121', CND.yellow \"line\", CND.reverse d.text\n    #.......................................................................................................\n    else if ( key_registry[ d.key ].is_block )\n      color = if d.key.startsWith '<' then CND.green else CND.red\n      urge 'µ11121', color \"block\", jr d\n    #.......................................................................................................\n    else\n      urge 'µ11121', CND.blue \"other\", jr d\n    #.......................................................................................................\n    send d\n    # return send d unless select d, '^blank'\n    # send stamp d\n    # $vnr    = VNR.new_level d.$vnr, 0\n    # $vnr    = VNR.advance $vnr; send H.fresh_datom '^p', { blanks: d.linecount, $vnr, }\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@$transform = ( S ) ->\n  pipeline = []\n  pipeline.push @$paragraphs  S\n  return PD.pull pipeline...\n\n"
  ]
}