{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/steampipes-extra.coffee"
  ],
  "names": [],
  "mappings": "AAEA;AAAA,MAAA,KAAA,EAAA,EAAA,EAAA;;EAAA,EAAA,GAA4B,OAAA,CAAQ,YAAR;;EAC5B,KAAA,GAA4B,OAAA,CAAQ,OAAR;;EAG5B,cAAA,GAAiB,QAAA,CAAA,CAAA,EAAA;;IAEf,IAAC,CAAA,SAAD,GAAa,QAAA,CAAE,OAAF,CAAA,EAAA;;AACf,UAAA,MAAA,EAAA,KAAA,EAAA,IAAA,EAAA,QAAA,EAAA;MACI,QAAA,GAAY;MACZ,MAAA,GAAY;MACZ,IAAA,GAAY;MACZ,IAAA,GAAY,MAAA,CAAO,MAAP,EAJhB;;MAMI,KAAA,GAAQ,CAAA,CAAA,GAAA;QACN,MAAc,gBAAA,IAAY,MAAM,CAAC,MAAP,GAAgB,EAA1C;AAAA,iBAAA;;QACA,IAAA,CAAK,KAAK,CAAC,SAAN,CAAgB,QAAhB,EAA0B;UAAE,IAAA,EAAM,QAAR;UAAkB,KAAA,EAAO,MAAM;QAA/B,CAA1B,CAAL;eACA,MAAA,GAAS;MAHH,EANZ;;AAWI,aAAO,IAAC,CAAA,CAAD,CAAG,CAAE,IAAF,CAAH,EAAc,CAAE,CAAF,EAAK,KAAL,CAAA,GAAA;AACzB,YAAA;QAAM,IAAA,GAAO;QACP,IAAkB,CAAA,KAAK,IAAvB;AAAA,iBAAO,KAAA,CAAA,EAAP;SADN;;QAGM,IAAG,CAAE,IAAA,GAAO,OAAA,CAAQ,CAAR,CAAT,CAAA,KAAwB,QAA3B;AACE,iBAAO,MAAM,CAAC,IAAP,CAAY,CAAZ,EADT;SAHN;;QAMM,KAAA,CAAA;QACA,QAAA,GAAY;;UACZ,SAAY;;QACZ,MAAM,CAAC,IAAP,CAAY,CAAZ;AACA,eAAO;MAXY,CAAd;IAZI,EADf;;IA0BE,IAAC,CAAA,cAAD,GAAkB,QAAA,CAAA,CAAA;AACpB,UAAA,QAAA,EAAA,IAAA,EAAA,GAAA;;;;MAGI,IAAA,GAAY,MAAA,CAAO,MAAP;MACZ,QAAA,GAAY;MACZ,GAAA,GAAY;AACZ,aAAO,IAAC,CAAA,CAAD,CAAG,CAAE,IAAF,CAAH,EAAc,CAAE,CAAF,EAAK,IAAL,CAAA,GAAA;QACnB,IAAG,CAAE,CAAA,KAAK,IAAP,CAAA,IAAkB,GAAG,CAAC,MAAJ,GAAa,CAAlC;UACE,IAAG,GAAG,CAAC,MAAJ,GAAa,CAAhB;YACE,IAAA,CAAK;cAAE,QAAF;cAAY,OAAA,EAAS,IAArB;cAA2B,CAAA,EAAG,GAAG,CAAC,GAAJ,CAAA;YAA9B,CAAL,EADF;;AAEA,iBAAO,KAHT;;QAIA,IAAG,GAAG,CAAC,MAAJ,GAAa,CAAhB;UACE,IAAA,CAAK;YAAE,QAAF;YAAY,OAAA,EAAS,KAArB;YAA4B,CAAA,EAAG,GAAG,CAAC,GAAJ,CAAA;UAA/B,CAAL;UACA,QAAA,GAAW,MAFb;;QAGA,GAAG,CAAC,IAAJ,CAAS,CAAT;AACA,eAAO;MATY,CAAd;IAPS,EA1BpB;;WA6CE,IAAC,CAAA,aAAD,GAAiB,QAAA,CAAE,SAAF,CAAA;aAAiB,IAAC,CAAA,IAAD,CAAM,IAAC,CAAA,cAAD,CAAA,CAAN,EAAyB,SAAzB;IAAjB;EA9CF;;EAgDjB,cAAc,CAAC,KAAf,CAAqB,EAArB;;EACA,MAAM,CAAC,OAAP,GAAiB;AArDjB",
  "sourcesContent": [
    "\n\nSP                        = require 'steampipes'\nDATOM                     = require 'datom'\n\n\nprovide_extras = ->\n  #-----------------------------------------------------------------------------------------------------------\n  @$group_by = ( grouper ) ->\n    ### TAINT, simplify, generalize, implement as standard transform `$group_by()` ###\n    prv_name  = null\n    buffer    = null\n    send      = null\n    last      = Symbol 'last'\n    #.........................................................................................................\n    flush = =>\n      return unless buffer? and buffer.length > 0\n      send DATOM.new_datom '^group', { name: prv_name, value: buffer[ .. ], }\n      buffer = null\n    #.........................................................................................................\n    return @$ { last, }, ( d, send_ ) =>\n      send = send_\n      return flush() if d is last\n      #.......................................................................................................\n      if ( name = grouper d ) is prv_name\n        return buffer.push d\n      #.......................................................................................................\n      flush()\n      prv_name  = name\n      buffer   ?= []\n      buffer.push d\n      return null\n  #-----------------------------------------------------------------------------------------------------------\n  @$mark_position = ->\n    ### Turns values into objects `{ first, last, value, }` where `value` is the original value and `first`\n    and `last` are booleans that indicate position of value in the stream. ###\n    # last      = @_symbols.last\n    last      = Symbol 'last'\n    is_first  = true\n    prv       = []\n    return @$ { last, }, ( d, send ) =>\n      if ( d is last ) and prv.length > 0\n        if prv.length > 0\n          send { is_first, is_last: true, d: prv.pop(), }\n        return null\n      if prv.length > 0\n        send { is_first, is_last: false, d: prv.pop(), }\n        is_first = false\n      prv.push d\n      return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  @mark_position = ( transform ) -> @pull @$mark_position(), transform\n\nprovide_extras.apply SP\nmodule.exports = SP\n\n"
  ]
}