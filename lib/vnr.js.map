{
  "version": 3,
  "file": "vnr.js",
  "sourceRoot": "..",
  "sources": [
    "src/vnr.coffee"
  ],
  "names": [],
  "mappings": ";AAEA;EAAA;AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,OAAA;;;EAKA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd;;EAC5B,CAAA,CAAE,EAAF,EACE,MADF,CAAA,GAC4B,GAD5B;;EAEA,EAAA,GAA4B,OAAA,CAAQ,YAAR,EAjB5B;;;EAmBA,KAAA,GAA4B,OAAA,CAAQ,SAAR;;EAC5B,CAAA,CAAE,GAAF,EACE,QADF,EAEE,OAFF,EAGE,OAHF,EAIE,OAJF,CAAA,GAI4B,KAJ5B,EApBA;;;EA2BA,IAAC,CAAA,SAAD,GAAa,CAAE,GAAF,EAAO,KAAK,CAAZ,CAAA,GAAA;AAIX,QAAA,CAAA;;;;IAAA,QAAQ,CAAC,aAAT,CAAuB,GAAvB;IACA,CAAA,GAAI,MAAA,CAAO,EAAP,EAAW,GAAX;IACJ,CAAC,CAAC,IAAF,CAAO,EAAP;AACA,WAAO;EAPI,EA3Bb;;;EAqCA,IAAC,CAAA,OAAD,GAAW,CAAE,GAAF,CAAA,GAAA;AAIT,QAAA,CAAA;;;;IAAA,QAAQ,CAAC,aAAT,CAAuB,GAAvB;IACA,CAAA,GAAuB,MAAA,CAAO,EAAP,EAAW,GAAX;IACvB,CAAG,CAAA,GAAG,CAAC,MAAJ,GAAa,CAAb,CAAH,IAAuB,CAAC;AACxB,WAAO;EAPE;AArCX",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DATAMILL/HELPERS'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n{ jr\n  assign }                = CND\nPD                        = require 'pipedreams'\n#...........................................................................................................\ntypes                     = require './types'\n{ isa\n  validate\n  declare\n  size_of\n  type_of }               = types\n\n#-----------------------------------------------------------------------------------------------------------\n@new_level = ( vnr, nr = 1 ) =>\n  ### Given a `mirage` instance and a vectorial line number `vnr`, return a copy of `vnr`, call it\n  `vnr0`, which has an index of `0` appended, thus representing the pre-first `vnr` for a level of lines\n  derived from the one that the original `vnr` pointed to. ###\n  validate.nonempty_list vnr\n  R = assign [], vnr\n  R.push nr\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@advance = ( vnr ) =>\n  ### Given a `mirage` instance and a vectorial line number `vnr`, return a copy of `vnr`, call it\n  `vnr0`, which has its last index incremented by `1`, thus representing the vectorial line number of the\n  next line in the same level that is derived from the same line as its predecessor. ###\n  validate.nonempty_list vnr\n  R                    = assign [], vnr\n  R[ vnr.length - 1 ] += +1\n  return R\n"
  ]
}