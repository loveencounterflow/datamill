{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../../src/experiments/parsing-with-markdown-it.coffee"
  ],
  "names": [],
  "mappings": "AAGA;EAAA;AAAA,MAAA,CAAA,EAAA,MAAA,EAAA,MAAA,EAAA,GAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,OAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,MAAA,EAAA,GAAA,EAAA,MAAA,EAAA,OAAA,EAAA,KAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,OAAA;;;EAGA,CAAA,GAA4B,OAAA,CAAQ,YAAR;;EAC5B,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B,CAAC,CAAC,mBAAF,CAAsB,UAAtB;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd;;EAC5B,CAAA,CAAE,EAAF,EACE,MADF,CAAA,GAC4B,GAD5B,EAdA;;;EAiBA,KAAA,GAA4B,MAAA,CAAO,OAAP;;EAC5B,IAAA,GAA4B,MAAA,CAAO,MAAP;;EAC5B,GAAA,GAA4B,OAAA,CAAQ,QAAR,EAnB5B;;;EAqBA,EAAA,GAA4B,OAAA,CAAQ,YAAR;;EAC5B,CAAA,CAAE,CAAF,EACE,MADF,EAEE,MAFF,EAGE,MAHF,EAIE,KAJF,CAAA,GAI4B,EAAE,CAAC,MAAH,CAAA,CAJ5B,EAtBA;;;EA4BA,KAAA,GAA4B,OAAA,CAAQ,UAAR;;EAC5B,CAAA,CAAE,GAAF,EACE,QADF,EAEE,OAFF,EAGE,OAHF,EAIE,OAJF,CAAA,GAI4B,KAJ5B;;EAMA,EAAA,GAAK,OAAA,CAAQ,aAAR;;EACL,EAAA,GAAK,IAAI,EAAJ,CAAA;;EAEL,MAAA,GAAS,CACP,SADO,EAEP,WAFO,EAGP,mBAHO,EAIP,qBAJO,EAKP,aALO,EAMP,qBANO,EAOP,wBAPO,EAQP,8BARO;;EAWT,KAAA,wCAAA;sBAAA;;IAEE,IAAA,CAAK,QAAL,EAAiB,GAAG,CAAC,KAAJ,CAAU,GAAA,CAAI,KAAJ,CAAV,CAAjB,EAA0C,GAAG,CAAC,MAAJ,CAAW,EAAE,CAAC,YAAH,CAAgB,KAAhB,CAAX,CAA1C;EAFF;AAjDA",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n############################################################################################################\nH                         = require '../helpers'\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = H.badge_from_filename __filename\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n{ jr\n  assign }                = CND\n#...........................................................................................................\nfirst                     = Symbol 'first'\nlast                      = Symbol 'last'\nVNR                       = require '../vnr'\n#...........................................................................................................\nPD                        = require 'steampipes'\n{ $\n  $watch\n  $async\n  select\n  stamp }                 = PD.export()\n#...........................................................................................................\ntypes                     = require '../types'\n{ isa\n  validate\n  declare\n  size_of\n  type_of }               = types\n\nMd = require 'markdown-it'\nmd = new Md()\n\nprobes = [\n  '***X***'\n  '***X* S**'\n  '**S `*code` *X***'\n  '**S \\\\`*code` *X***'\n  '**S *X* S**'\n  '**S *X* <ding/> S**'\n  '<div>**S *X* S**</div>'\n  '<div x=foo>**S *X* S**</div>'\n  ]\n\nfor probe in probes\n  # info 'µ33344', ( CND.white rpr probe ), ( CND.yellow md.parse probe )\n  info 'µ33344', ( CND.white rpr probe ), ( CND.yellow md.renderInline probe )\n\n\n\n\n\n\n"
  ]
}