{
  "version": 3,
  "file": "005-start-stop.js",
  "sourceRoot": "..",
  "sources": [
    "src/005-start-stop.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nH                         = require './helpers'\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = H.badge_from_filename __filename\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n{ jr\n  assign }                = CND\n#...........................................................................................................\nrequire                   './exception-handler'\nfirst                     = Symbol 'first'\nlast                      = Symbol 'last'\nVNR                       = require './vnr'\n#...........................................................................................................\nPD                        = require 'pipedreams'\n{ $\n  $watch\n  $async\n  select\n  stamp }                 = PD\n#...........................................................................................................\ntypes                     = require './types'\n{ isa\n  validate\n  declare\n  size_of\n  type_of }               = types\n\n#-----------------------------------------------------------------------------------------------------------\n@mark_preamble = ( S ) ->\n  ### TAINT code duplication ###\n  key         = '^line'\n  pattern     = '<start/>'\n  dest        = 'preamble'\n  dbr         = S.mirage.dbr\n  dbw         = S.mirage.dbw\n  rows        = dbr.$.all_rows dbr.find_eq_pattern { key, pattern, }\n  first_lnr   = null\n  last_lnr    = null\n  switch size = size_of rows\n    when 0\n      warn \"no document preamble found\"\n    when 1\n      row             = rows[ 0 ]\n      d               = H.datom_from_row S, row\n      first_lnr       = 1\n      start_lnr       = d.$vnr[ 0 ]\n      last_lnr        = start_lnr - 1\n      first_vnr_blob  = dbw.$.as_hollerith [ first_lnr ]\n      start_vnr_blob  = dbw.$.as_hollerith [ start_lnr ]\n      last_vnr_blob   = dbw.$.as_hollerith [ last_lnr  ]\n      dbw.set_dest { dest, first_vnr_blob, last_vnr_blob, }\n      dbw.stamp { vnr_blob: start_vnr_blob, }\n      help \"document preamble found on lines 1 thru #{last_lnr}\"\n    else\n      throw new Error \"µ22231 found #{size} #{pattern} tags, only up to one are allowed\"\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@mark_postscript = ( S ) ->\n  ### TAINT code duplication ###\n  key         = '^line'\n  pattern     = '<stop/>'\n  dbr         = S.mirage.dbr\n  dbw         = S.mirage.dbw\n  rows        = dbr.$.all_rows dbr.find_eq_pattern { key, pattern, }\n  first_lnr   = null\n  last_lnr    = null\n  switch size = size_of rows\n    when 0\n      warn \"no document terminator found\"\n      ### TAINT consider to store these values in DB ###\n    when 1\n      row           = rows[ 0 ]\n      d             = H.datom_from_row S, row\n      first_lnr     = d.$vnr[ 0 ]\n      ### TAINT can just ignore all <stop/> tags after first ###\n      last_lnr      = dbr.$.first_value dbr.count_lines()\n      first_vnr_blob = dbw.$.as_hollerith [ first_lnr ]\n      last_vnr_blob  = dbw.$.as_hollerith [ last_lnr ]\n      dbw.stamp { first_vnr_blob, last_vnr_blob, }\n      help \"document postscript found on lines #{first_lnr} thru #{last_lnr}\"\n    else\n      throw new Error \"µ22231 found #{size} #{pattern} tags, only up to one are allowed\"\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n### NOTE pseudo-transforms that run before first datom is sent ###\n@$start = ( S ) -> $watch { first, }, ( d ) => @mark_preamble   S if d is first\n@$stop  = ( S ) -> $watch { first, }, ( d ) => @mark_postscript S if d is first\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@$transform = ( S ) ->\n  pipeline = []\n  pipeline.push @$start   S\n  pipeline.push @$stop    S\n  return PD.pull pipeline...\n\n"
  ]
}