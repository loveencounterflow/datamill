{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/010-2-whitespace-dst.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nH                         = require './helpers'\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = H.badge_from_filename __filename\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n{ jr\n  assign }                = CND\n#...........................................................................................................\nfirst                     = Symbol 'first'\nlast                      = Symbol 'last'\nDM                        = require '..'\n#...........................................................................................................\nSPX                       = require './steampipes-extra'\n{ $\n  $watch\n  $async }                = SPX.export()\n#...........................................................................................................\nDATOM                     = require 'datom'\n{ VNR }                   = DATOM\n{ freeze\n  thaw\n  new_datom\n  is_stamped\n  select\n  stamp }                 = DATOM.export()\n#...........................................................................................................\ntypes                     = require './types'\n{ isa\n  validate\n  declare\n  size_of\n  type_of }               = types\n\n\n#-----------------------------------------------------------------------------------------------------------\n@$blanks_at_dest_changes = ( S ) -> $ { last, }, ( d_, send ) =>\n  return send d_ unless d_ is last\n  db  = S.mirage.dbw\n  #.........................................................................................................\n  do =>\n    ref = 'ws1/dst1'\n    for row from db.read_changed_dest_last_lines()\n      break if select row, '^blank'\n      d = H.datom_from_row S, row\n      send stamp d\n      send d = VNR.deepen DATOM.set d, { $fresh: true, ref, }\n      send H.fresh_datom '^blank', { linecount: 0, $vnr: ( VNR.advance d.$vnr ), dest: d.dest, ref, }\n  #.........................................................................................................\n  do =>\n    ref = 'ws1/dst2'\n    for row from db.read_changed_dest_first_lines()\n      break if select row, '^blank'\n      d = H.datom_from_row S, row\n      send stamp d\n      send d  = VNR.deepen DATOM.set d, { $fresh: true, ref, }\n      send H.fresh_datom '^blank', { linecount: 0, $vnr: ( VNR.recede d.$vnr ), dest: d.dest, ref, }\n  return null\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@$transform = ( S ) ->\n  pipeline = []\n  pipeline.push @$blanks_at_dest_changes  S\n  return SPX.pull pipeline...\n\n"
  ]
}