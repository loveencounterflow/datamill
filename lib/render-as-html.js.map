{
  "version": 3,
  "file": "render-as-html.js",
  "sourceRoot": "..",
  "sources": [
    "src/render-as-html.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DATAMILL/MAIN'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n{ jr\n  assign }                = CND\n#...........................................................................................................\nrequire                   './exception-handler'\nfirst                     = Symbol 'first'\nlast                      = Symbol 'last'\nMIRAGE                    = require 'mkts-mirage'\nVNR                       = require './vnr'\n#...........................................................................................................\nPD                        = require 'pipedreams'\n{ $\n  $watch\n  $async\n  select\n  stamp }                 = PD\n#...........................................................................................................\n@types                    = require './types'\n{ isa\n  validate\n  declare\n  first_of\n  last_of\n  size_of\n  type_of }               = @types\n#...........................................................................................................\nH                         = require './helpers'\n{ cwd_abspath\n  cwd_relpath\n  here_abspath\n  project_abspath }       = H\n#...........................................................................................................\nDM                        = require '..'\n\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@render = ( S ) -> new Promise ( resolve, reject ) =>\n  DM.run_phase S, PD.$show()\n  resolve()\n\n\n############################################################################################################\nunless module.parent?\n  do =>\n    #.......................................................................................................\n    settings =\n      file_path:    project_abspath './src/tests/demo.md'\n      # file_path:    project_abspath './src/tests/demo-medium.md'\n      # file_path:    project_abspath './src/tests/demo-simple-paragraphs.md'\n      # db_path:      ':memory:'\n      db_path:      project_abspath './db/datamill.db'\n      icql_path:    project_abspath './db/datamill.icql'\n      default_key:  '^line'\n      default_dest: 'main'\n      clear:        true\n    help \"using database at #{settings.db_path}\"\n    mirage  = await MIRAGE.create settings\n    await @parse_document mirage\n    await @render_as_html mirage\n    #.......................................................................................................\n    db              = mirage.db\n    first_vnr_blob  = db.$.as_hollerith [ 42, 0, ]\n    last_vnr_blob   = db.$.as_hollerith [ 42, 0, ]\n    for row from db.read_unstamped_lines { first_vnr_blob, last_vnr_blob, }\n      info jr H.datom_from_row null, row\n      # { prv_dest, dest, stamped, key, } = row\n      # info jr { prv_dest, dest, stamped, key, }\n    #.......................................................................................................\n    # for row from db.$.query \"select * from dest_changes_forward order by vnr_blob;\"\n    #   { prv_dest, dest, stamped, key, } = row\n    #   info jr { prv_dest, dest, stamped, key, }\n    # for row from db.read_changed_dest_last_lines()\n    #   delete row.vnr_blob\n    #   help jr row\n    # for row from db.read_changed_dest_first_lines()\n    #   delete row.vnr_blob\n    #   info jr row\n    # help 'ok'\n    return null\n\n\n\n\n"
  ]
}