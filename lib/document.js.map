{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/document.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,UAAA,EAAA,QAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,GAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,CAAA,CAAE,KAAF,EACE,KADF,EAEE,IAFF,EAGE,IAHF,EAIE,KAJF,EAKE,MALF,EAME,IANF,EAOE,IAPF,EAQE,OARF,CAAA,GAQ4B,GAAG,CAAC,GAAG,CAAC,WAAR,CAAoB,iBAApB,CAR5B;;EASA,CAAA,CAAE,GAAF,EACE,OADF,EAEE,IAFF,EAGE,GAHF,CAAA,GAG4B,GAAG,CAAC,GAHhC;;EAIA,KAAA,GAA4B,IAAI,CAAE,OAAA,CAAQ,WAAR,CAAF,CAAuB,CAAC,SAA5B,CAAA;;EAC5B,CAAA,CAAE,GAAF,EACE,OADF,CAAA,GAC4B,KAD5B;;EAEA,CAAA,CAAE,GAAF,CAAA,GAA4B,CAAE,OAAA,CAAQ,MAAR,CAAF,CAAkB,CAAC,IAA/C,EArBA;;;;;EAyBA,CAAA,CAAE,cAAF,EACE,kBADF,CAAA,GAC8B,OAAA,CAAQ,SAAR,CAD9B,EAzBA;;;;;EAgCM,aAAN,MAAA,WAAA;IACyB,OAAtB,oBAAsB,CAAE,KAAF,EAAS,KAAT,CAAA;aAErB,QAAA,CAAA,CAAA,EAAA;eAAG,IAAC,CAAA,EAAE,CAAC,gBAAJ,CAAqB,GAAG,CAAA,OAAA,CAAA,CAAU,KAAV,CAAA,MAAA,CAAA,CAAwB,IAAC,CAAA,GAAG,CAAC,MAA7B,CAAA,CAAA,CAAsC,KAAtC,CAAA,YAAA,CAAxB;MAAH;IAFqB;;EADzB;;EAMM;;IAAN,MAAA,SAAA,CAAA;;;;MAME,WAAa,CAAE,GAAF,CAAA,EAAA;;QAEX,GAAG,CAAC,KAAK,CAAC,IAAV,CAAe,IAAf,EAAkB,OAAlB,EAA2B,kBAAA,CAAA,CAA3B;QACA,IAAC,CAAA,GAAD,GAAc,IAAC,CAAA,KAAK,CAAC,MAAM,CAAC,qBAAd,CAAoC,GAApC;QACd,GAAG,CAAC,KAAK,CAAC,IAAV,CAAe,IAAf,EAAkB,IAAlB,EAAwB,IAAC,CAAA,GAAG,CAAC,EAA7B;QAAiC,OAAO,IAAC,CAAA,GAAG,CAAC;QAC7C,IAAC,CAAA,uBAAD,CAAA;AACA,eAAO;MANI,CAHf;;;MAYE,uBAAyB,CAAA,CAAA,EAAA;;AAC3B,YAAA;QACI,CAAA,CAAE,MAAF,CAAA,GAAa,IAAC,CAAA,GAAd;QACA,IAAC,CAAA,EAAE,CAAC,sBAAJ,CAA2B,KAA3B;QACA,IAAC,CAAA,EAAD,CAAI,GAAG,CAAA,qBAAA,CAAA,CACkB,MADlB,CAAA,KAAA,CAAP;QAEA,IAAC,CAAA,EAAE,CAAC,sBAAJ,CAA2B,IAA3B,EALJ;;;;QASI,IAAC,CAAA,EAAD,CAAI,GAAG,CAAA,aAAA,CAAA,CACU,MADV,CAAA;;gCAAA,CAAP,EATJ;;AAcI,eAAO;MAfgB,CAZ3B;;;MAiCE,iBAAmB,CAAE,GAAF,CAAA;eACjB,GAAA,GAAM,IAAC,CAAA,KAAK,CAAC,MAAM,CAAC,iBAAd,CAAgC,GAAhC;MADW;;IApCrB;;;uBAiCE,gBAAA,GAAkB,UAAU,CAAC,oBAAX,CAAgC,OAAhC,EAAyC,aAAzC;;;;gBAvEpB;;;EAgFA,MAAM,CAAC,OAAP,GAAiB,CAAE,QAAF;AAhFjB",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'DATAMILL/SERVER'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\ntypes                     = new ( require 'intertype' ).Intertype()\n{ isa\n  type_of }               = types\n{ SQL }                   = ( require 'dbay' ).DBay\n#...........................................................................................................\n# FS                        = require 'node:fs'\n# PATH                      = require 'node:path'\n{ get_base_types\n  get_document_types }      = require './types'\n\n\n#===========================================================================================================\n# DECORATORS\n#-----------------------------------------------------------------------------------------------------------\nclass Decorators\n  @get_all_first_values: ( table, field ) ->\n    ### TAINT use proper interpolation ###\n    -> @db.all_first_values SQL\"select #{field} from #{@cfg.prefix}#{table} order by 1;\"\n\n#===========================================================================================================\nclass Document\n\n\n  #=========================================================================================================\n  # CONSTRUCTION\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    # super()\n    GUY.props.hide @, 'types', get_document_types()\n    @cfg        = @types.create.datamill_document_cfg cfg\n    GUY.props.hide @, 'db', @cfg.db; delete @cfg.db\n    @_procure_infrastructure()\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _procure_infrastructure: ->\n    ### TAINT skip if tables found ###\n    { prefix } = @cfg\n    @db.set_foreign_keys_state false\n    @db SQL\"\"\"\n      drop table if exists #{prefix}file;\"\"\"\n    @db.set_foreign_keys_state true\n    #-------------------------------------------------------------------------------------------------------\n    # TABLES\n    #.......................................................................................................\n    @db SQL\"\"\"\n      create table #{prefix}files (\n          doc_file_id  text not null,\n        primary key ( doc_file_id ) );\"\"\"\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  get_doc_file_ids: Decorators.get_all_first_values 'files', 'doc_file_id'\n\n  #---------------------------------------------------------------------------------------------------------\n  new_external_file: ( cfg ) ->\n    cfg = @types.create.new_external_file cfg\n\n\n\n############################################################################################################\nmodule.exports = { Document, }\n\n\n\n\n\n"
  ]
}