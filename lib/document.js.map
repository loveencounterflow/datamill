{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/document.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'DATAMILL/DOCUMENT'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\ntypes                     = new ( require 'intertype' ).Intertype()\n{ isa\n  type_of }               = types\n{ SQL \n  sql }                   = require 'dbay'\n{ I, V, L, }              = sql\n#...........................................................................................................\n# FS                        = require 'node:fs'\n# PATH                      = require 'node:path'\n{ get_base_types\n  get_document_types }      = require './types'\n\n\n#===========================================================================================================\n# DECORATORS\n#-----------------------------------------------------------------------------------------------------------\nclass Decorators\n  \n  ### NOTE this could meaningfully go into a static DBay submodule to assist in building client APIs ###\n\n  #---------------------------------------------------------------------------------------------------------\n  @get_all_first_values: ( table, field ) ->\n    -> @db.all_first_values SQL\"select #{I field} from #{I @cfg.prefix+table} order by 1;\"\n\n  #---------------------------------------------------------------------------------------------------------\n  @get_all_rows: ( table ) ->\n    -> @db.all_rows SQL\"select * from #{I @cfg.prefix+table} order by 1;\"\n\n#===========================================================================================================\nclass Document\n\n  #=========================================================================================================\n  # CONSTRUCTION\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    # super()\n    GUY.props.hide @, 'types', get_document_types()\n    @cfg        = @types.create.doc_document_cfg cfg\n    GUY.props.hide @, 'db',             @cfg.db;            delete @cfg.db\n    GUY.props.hide @, 'file_adapters',  @cfg.file_adapters; delete @cfg.file_adapters\n    @_procure_infrastructure()\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _procure_infrastructure: ->\n    ### TAINT skip if tables found ###\n    { prefix } = @cfg\n    @db.set_foreign_keys_state false\n    @db SQL\"\"\"\n      drop table if exists #{prefix}file;\"\"\"\n    @db.set_foreign_keys_state true\n    #-------------------------------------------------------------------------------------------------------\n    # TABLES\n    # #.......................................................................................................\n    # @db SQL\"\"\"\n    #   create table #{prefix}fads (\n    #       doc_fad_id            text not null,\n    #       doc_fad_name          text not null,\n    #       comment               text,\n    #     primary key ( doc_fad_id ) );\"\"\"\n    #.......................................................................................................\n    FS    = require 'node:fs'\n    PATH  = require 'node:path'\n    abspath_cfg =\n      name:           'abspath'\n      deterministic:  true\n      varargs:        false\n      ### TAINT path should be relative to document location, not relative to this module ###\n      call:           ( path ) -> PATH.join __dirname, '..', path\n    @db.create_function abspath_cfg\n    @db.alt.create_function abspath_cfg\n    #.......................................................................................................\n    @db SQL\"\"\"\n      create table #{prefix}files (\n          doc_file_id           text not null,\n          doc_file_path         text not null,\n          -- doc_file_hash         text not null,\n          doc_file_abspath      text not null generated always as ( abspath( doc_file_path ) ) virtual,\n          -- doc_fad_id            text not null references #{prefix}fads,\n          -- doc_file_parameters   json not null,\n        primary key ( doc_file_id ) );\"\"\"\n    # #.......................................................................................................\n    # @db SQL\"\"\"\n    #   create table #{prefix}lines (\n    #       doc_file_id           text    not null references #{prefix}files,\n    #       doc_line_nr           integer not null,\n    #       doc_line_text         text    not null,\n    #       -- doc_fad_id            text not null references #{prefix}fads,\n    #       -- doc_file_parameters   json not null,\n    #     primary key ( doc_file_id, doc_line_nr ) );\"\"\"\n    #.......................................................................................................\n    _lines_of = ( doc_file_id ) ->\n      doc_file_abspath = @db.alt.single_value SQL\"\"\"\n        select doc_file_abspath from #{prefix}files where doc_file_id = $doc_file_id;\"\"\", { doc_file_id, }\n      lines = ( FS.readFileSync doc_file_abspath, { encoding: 'utf-8', } ).split '\\n'\n      for line, line_idx in lines\n        yield { path, lnr: line_idx + 1, line, }\n      return null\n    @db.create_table_function\n      name:         \"_lines_of\"\n      parameters:   [ 'doc_file_id', ]\n      columns:      [ 'path', 'lnr', 'line', ]\n      rows:         _lines_of.bind @\n    #.......................................................................................................\n    # path          = PATH.resolve PATH.join __dirname, '../../hengist/assets/icql', 'ncrglyphwbf.tsv'\n    # info '^3453^', @db.prepare_insert { into: \"#{prefix}files\", exclude: [ 'doc_file_abspath', ], returning: '*', }\n    path              = '../hengist/assets/icql/ncrglyphwbf.tsv'\n    @_insert_file     = @db.prepare_insert { into: \"#{prefix}files\", exclude: [ 'doc_file_abspath', ], returning: '*', }\n    debug '^3223847^', @db.first_row @_insert_file, { doc_file_id: 'f1', doc_file_path: path, }\n    result  = @db.all_rows SQL\"\"\"\n      select\n          *\n        from #{prefix}files as f,\n        _lines_of( f.doc_file_id );\"\"\" # where lnr between 10 and 14 order by 1, 2, 3;\"\n    console.table result\n    # for row from @db SQL\"\"\"select * from @\"\"\"\n    #.......................................................................................................\n    # insert_file_kind = @db.prepare_insert { into: \"#{prefix}fads\", }\n    # @db =>\n    #   for doc_fad_id, clasz of @file_adapters\n    #     doc_fad_name  = clasz.name\n    #     comment       = clasz.comment ? null\n    #     @db insert_file_kind, { doc_fad_id, doc_fad_name, comment, }\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  get_doc_file_ids:   Decorators.get_all_first_values 'files',      'doc_file_id'\n  # get_doc_fads:       Decorators.get_all_rows         'fads'\n\n  #---------------------------------------------------------------------------------------------------------\n  add_file: ( cfg ) ->\n    cfg = @types.create.doc_add_file_cfg cfg\n    debug '^24624^', cfg\n    debug '^24624^', @file_adapters\n    debug '^24624^', clasz = @file_adapters[ cfg.doc_fad_id ]\n    R = new clasz cfg\n    return R\n\n\n#===========================================================================================================\n# FILE ADAPTERS (FADs)\n#===========================================================================================================\nclass File_adapter_abc\n  @comment: \"abstract base class for files\"\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ->\n    GUY.props.hide @, 'types', get_document_types()\n    return undefined\n\n\n# #===========================================================================================================\n# class External_file_abc extends File_adapter_abc\n#   @comment: \"abstract base class for external files\"\n\n#   #---------------------------------------------------------------------------------------------------------\n#   constructor: ( cfg ) ->\n#     super cfg\n#     @cfg   = @types.create.new_external_file_cfg cfg\n#     return undefined\n\n#   #---------------------------------------------------------------------------------------------------------\n#   write:        null\n#   walk_chunks:  null\n#   walk_lines:   null\n\n#===========================================================================================================\nclass External_text_file extends File_adapter_abc\n  @comment: \"adapter for external text files\"\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super()\n    debug '^354^', { cfg, }\n    @cfg   = @types.create.new_external_text_file_cfg cfg\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  walk_lines: ->\n    yield 'helo'\n    yield 'world'\n    return null\n\n\n############################################################################################################\n### Abstract base classes use class name, instantiable classes short acronym with `x` meaning 'external',\n`txt` being most common file name extension for text files: ###\nfile_adapters   =\n  # File_adapter_abc:   File_adapter_abc\n  # External_file_abc:  External_file_abc\n  xtxt:               External_text_file\nmodule.exports  = { Document, File_adapter_abc, file_adapters, }\n\n\n\n\n\n"
  ]
}