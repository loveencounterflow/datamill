{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "..",
  "sources": [
    "src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DATAMILL/MAIN'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n{ jr\n  assign }                = CND\n#...........................................................................................................\nrequire                   './exception-handler'\nfirst                     = Symbol 'first'\nlast                      = Symbol 'last'\nMIRAGE                    = require 'mkts-mirage'\nVNR                       = require './vnr'\n#...........................................................................................................\nPD                        = require 'pipedreams'\n{ $\n  $watch\n  $async\n  select\n  stamp }                 = PD\n#...........................................................................................................\n@types                    = require './types'\n{ isa\n  validate\n  declare\n  size_of\n  type_of }               = @types\n#...........................................................................................................\nH                         = require './helpers'\n{ cwd_abspath\n  cwd_relpath\n  here_abspath\n  project_abspath }       = H\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@run_phase = ( S, transform ) -> new Promise ( resolve, reject ) =>\n  source    = PD.new_push_source()\n  pipeline  = []\n  pipeline.push source\n  pipeline.push transform\n  # pipeline.push H.$show S\n  pipeline.push H.$feed_db S\n  pipeline.push PD.$drain => resolve()\n  PD.pull pipeline...\n  H.feed_source S, source\n\n#-----------------------------------------------------------------------------------------------------------\n@translate_document = ( mirage ) -> new Promise ( resolve, reject ) =>\n  S           = { mirage, }\n  limit       = Infinity\n  phase_names = [\n    './010-consolidate-whitespace'\n    './020-blocks'\n    # './030-special-forms'\n    ]\n  #.........................................................................................................\n  for phase_name in phase_names\n    loop\n      phase = require phase_name\n      help \"phase #{phase_name}\"\n      # help \"phase #{rpr phase}\"\n      await @run_phase S, phase.$transform S\n      break unless H.repeat_phase S, phase\n  #.........................................................................................................\n  H.show_overview S, false\n  # H.show_overview S, true\n  resolve()\n  #.........................................................................................................\n  return null\n\n\n############################################################################################################\nunless module.parent?\n  do =>\n    #.......................................................................................................\n    settings =\n      file_path:  project_abspath './src/tests/demo.md'\n      db_path:    '/tmp/mirage.db'\n      icql_path:  project_abspath './db/datamill.icql'\n    mirage = await MIRAGE.create settings\n    await @translate_document mirage\n    help 'ok'\n\n\n\n\n\n"
  ]
}